//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace meno.AppTables {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("other_ds")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class other_ds : System.Data.DataSet {
        
        private tblIllerDataTable tabletblIller;
        
        private tblSaglikTesisiListDataTable tabletblSaglikTesisiList;
        
        private st_illerDataTable tablest_iller;
        
        private st_kamu_ozelDataTable tablest_kamu_ozel;
        
        private st_tesis_turleriDataTable tablest_tesis_turleri;
        
        private st_tesislerDataTable tablest_tesisler;
        
        private tblDoktorListDataTable tabletblDoktorList;
        
        private System.Data.DataRelation relationst_iller_st_tesisler;
        
        private System.Data.DataRelation relationst_tesis_turleri_st_tesisler;
        
        private System.Data.DataRelation relationst_kamu_ozel_st_tesisler;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public other_ds() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected other_ds(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tblIller"] != null)) {
                    base.Tables.Add(new tblIllerDataTable(ds.Tables["tblIller"]));
                }
                if ((ds.Tables["tblSaglikTesisiList"] != null)) {
                    base.Tables.Add(new tblSaglikTesisiListDataTable(ds.Tables["tblSaglikTesisiList"]));
                }
                if ((ds.Tables["st_iller"] != null)) {
                    base.Tables.Add(new st_illerDataTable(ds.Tables["st_iller"]));
                }
                if ((ds.Tables["st_kamu_ozel"] != null)) {
                    base.Tables.Add(new st_kamu_ozelDataTable(ds.Tables["st_kamu_ozel"]));
                }
                if ((ds.Tables["st_tesis_turleri"] != null)) {
                    base.Tables.Add(new st_tesis_turleriDataTable(ds.Tables["st_tesis_turleri"]));
                }
                if ((ds.Tables["st_tesisler"] != null)) {
                    base.Tables.Add(new st_tesislerDataTable(ds.Tables["st_tesisler"]));
                }
                if ((ds.Tables["tblDoktorList"] != null)) {
                    base.Tables.Add(new tblDoktorListDataTable(ds.Tables["tblDoktorList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblIllerDataTable tblIller {
            get {
                return this.tabletblIller;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblSaglikTesisiListDataTable tblSaglikTesisiList {
            get {
                return this.tabletblSaglikTesisiList;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public st_illerDataTable st_iller {
            get {
                return this.tablest_iller;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public st_kamu_ozelDataTable st_kamu_ozel {
            get {
                return this.tablest_kamu_ozel;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public st_tesis_turleriDataTable st_tesis_turleri {
            get {
                return this.tablest_tesis_turleri;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public st_tesislerDataTable st_tesisler {
            get {
                return this.tablest_tesisler;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblDoktorListDataTable tblDoktorList {
            get {
                return this.tabletblDoktorList;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            other_ds cln = ((other_ds)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["tblIller"] != null)) {
                    base.Tables.Add(new tblIllerDataTable(ds.Tables["tblIller"]));
                }
                if ((ds.Tables["tblSaglikTesisiList"] != null)) {
                    base.Tables.Add(new tblSaglikTesisiListDataTable(ds.Tables["tblSaglikTesisiList"]));
                }
                if ((ds.Tables["st_iller"] != null)) {
                    base.Tables.Add(new st_illerDataTable(ds.Tables["st_iller"]));
                }
                if ((ds.Tables["st_kamu_ozel"] != null)) {
                    base.Tables.Add(new st_kamu_ozelDataTable(ds.Tables["st_kamu_ozel"]));
                }
                if ((ds.Tables["st_tesis_turleri"] != null)) {
                    base.Tables.Add(new st_tesis_turleriDataTable(ds.Tables["st_tesis_turleri"]));
                }
                if ((ds.Tables["st_tesisler"] != null)) {
                    base.Tables.Add(new st_tesislerDataTable(ds.Tables["st_tesisler"]));
                }
                if ((ds.Tables["tblDoktorList"] != null)) {
                    base.Tables.Add(new tblDoktorListDataTable(ds.Tables["tblDoktorList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabletblIller = ((tblIllerDataTable)(base.Tables["tblIller"]));
            if ((initTable == true)) {
                if ((this.tabletblIller != null)) {
                    this.tabletblIller.InitVars();
                }
            }
            this.tabletblSaglikTesisiList = ((tblSaglikTesisiListDataTable)(base.Tables["tblSaglikTesisiList"]));
            if ((initTable == true)) {
                if ((this.tabletblSaglikTesisiList != null)) {
                    this.tabletblSaglikTesisiList.InitVars();
                }
            }
            this.tablest_iller = ((st_illerDataTable)(base.Tables["st_iller"]));
            if ((initTable == true)) {
                if ((this.tablest_iller != null)) {
                    this.tablest_iller.InitVars();
                }
            }
            this.tablest_kamu_ozel = ((st_kamu_ozelDataTable)(base.Tables["st_kamu_ozel"]));
            if ((initTable == true)) {
                if ((this.tablest_kamu_ozel != null)) {
                    this.tablest_kamu_ozel.InitVars();
                }
            }
            this.tablest_tesis_turleri = ((st_tesis_turleriDataTable)(base.Tables["st_tesis_turleri"]));
            if ((initTable == true)) {
                if ((this.tablest_tesis_turleri != null)) {
                    this.tablest_tesis_turleri.InitVars();
                }
            }
            this.tablest_tesisler = ((st_tesislerDataTable)(base.Tables["st_tesisler"]));
            if ((initTable == true)) {
                if ((this.tablest_tesisler != null)) {
                    this.tablest_tesisler.InitVars();
                }
            }
            this.tabletblDoktorList = ((tblDoktorListDataTable)(base.Tables["tblDoktorList"]));
            if ((initTable == true)) {
                if ((this.tabletblDoktorList != null)) {
                    this.tabletblDoktorList.InitVars();
                }
            }
            this.relationst_iller_st_tesisler = this.Relations["st_iller_st_tesisler"];
            this.relationst_tesis_turleri_st_tesisler = this.Relations["st_tesis_turleri_st_tesisler"];
            this.relationst_kamu_ozel_st_tesisler = this.Relations["st_kamu_ozel_st_tesisler"];
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "other_ds";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/other_ds.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletblIller = new tblIllerDataTable();
            base.Tables.Add(this.tabletblIller);
            this.tabletblSaglikTesisiList = new tblSaglikTesisiListDataTable();
            base.Tables.Add(this.tabletblSaglikTesisiList);
            this.tablest_iller = new st_illerDataTable();
            base.Tables.Add(this.tablest_iller);
            this.tablest_kamu_ozel = new st_kamu_ozelDataTable();
            base.Tables.Add(this.tablest_kamu_ozel);
            this.tablest_tesis_turleri = new st_tesis_turleriDataTable();
            base.Tables.Add(this.tablest_tesis_turleri);
            this.tablest_tesisler = new st_tesislerDataTable();
            base.Tables.Add(this.tablest_tesisler);
            this.tabletblDoktorList = new tblDoktorListDataTable();
            base.Tables.Add(this.tabletblDoktorList);
            this.relationst_iller_st_tesisler = new System.Data.DataRelation("st_iller_st_tesisler", new System.Data.DataColumn[] {
                        this.tablest_iller.ridColumn}, new System.Data.DataColumn[] {
                        this.tablest_tesisler.ILIColumn}, false);
            this.Relations.Add(this.relationst_iller_st_tesisler);
            this.relationst_tesis_turleri_st_tesisler = new System.Data.DataRelation("st_tesis_turleri_st_tesisler", new System.Data.DataColumn[] {
                        this.tablest_tesis_turleri.ridColumn}, new System.Data.DataColumn[] {
                        this.tablest_tesisler.TESISTURUColumn}, false);
            this.Relations.Add(this.relationst_tesis_turleri_st_tesisler);
            this.relationst_kamu_ozel_st_tesisler = new System.Data.DataRelation("st_kamu_ozel_st_tesisler", new System.Data.DataColumn[] {
                        this.tablest_kamu_ozel.ridColumn}, new System.Data.DataColumn[] {
                        this.tablest_tesisler.KAMOZColumn}, false);
            this.Relations.Add(this.relationst_kamu_ozel_st_tesisler);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblIller() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblSaglikTesisiList() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializest_iller() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializest_kamu_ozel() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializest_tesis_turleri() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializest_tesisler() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblDoktorList() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            other_ds ds = new other_ds();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void tblIllerRowChangeEventHandler(object sender, tblIllerRowChangeEvent e);
        
        public delegate void tblSaglikTesisiListRowChangeEventHandler(object sender, tblSaglikTesisiListRowChangeEvent e);
        
        public delegate void st_illerRowChangeEventHandler(object sender, st_illerRowChangeEvent e);
        
        public delegate void st_kamu_ozelRowChangeEventHandler(object sender, st_kamu_ozelRowChangeEvent e);
        
        public delegate void st_tesis_turleriRowChangeEventHandler(object sender, st_tesis_turleriRowChangeEvent e);
        
        public delegate void st_tesislerRowChangeEventHandler(object sender, st_tesislerRowChangeEvent e);
        
        public delegate void tblDoktorListRowChangeEventHandler(object sender, tblDoktorListRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblIllerDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnkod;
            
            private System.Data.DataColumn columnaciklama;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblIllerDataTable() {
                this.TableName = "tblIller";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblIllerDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblIllerDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn kodColumn {
                get {
                    return this.columnkod;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn aciklamaColumn {
                get {
                    return this.columnaciklama;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblIllerRow this[int index] {
                get {
                    return ((tblIllerRow)(this.Rows[index]));
                }
            }
            
            public event tblIllerRowChangeEventHandler tblIllerRowChanging;
            
            public event tblIllerRowChangeEventHandler tblIllerRowChanged;
            
            public event tblIllerRowChangeEventHandler tblIllerRowDeleting;
            
            public event tblIllerRowChangeEventHandler tblIllerRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblIllerRow(tblIllerRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblIllerRow AddtblIllerRow(string kod, string aciklama) {
                tblIllerRow rowtblIllerRow = ((tblIllerRow)(this.NewRow()));
                rowtblIllerRow.ItemArray = new object[] {
                        kod,
                        aciklama};
                this.Rows.Add(rowtblIllerRow);
                return rowtblIllerRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tblIllerDataTable cln = ((tblIllerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tblIllerDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnkod = base.Columns["kod"];
                this.columnaciklama = base.Columns["aciklama"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnkod = new System.Data.DataColumn("kod", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnkod);
                this.columnaciklama = new System.Data.DataColumn("aciklama", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnaciklama);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblIllerRow NewtblIllerRow() {
                return ((tblIllerRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tblIllerRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tblIllerRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblIllerRowChanged != null)) {
                    this.tblIllerRowChanged(this, new tblIllerRowChangeEvent(((tblIllerRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblIllerRowChanging != null)) {
                    this.tblIllerRowChanging(this, new tblIllerRowChangeEvent(((tblIllerRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblIllerRowDeleted != null)) {
                    this.tblIllerRowDeleted(this, new tblIllerRowChangeEvent(((tblIllerRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblIllerRowDeleting != null)) {
                    this.tblIllerRowDeleting(this, new tblIllerRowChangeEvent(((tblIllerRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblIllerRow(tblIllerRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                other_ds ds = new other_ds();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblIllerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblSaglikTesisiListDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columntesisIl;
            
            private System.Data.DataColumn columntesisAdi;
            
            private System.Data.DataColumn columntesisKodu;
            
            private System.Data.DataColumn columntesisSinifKodu;
            
            private System.Data.DataColumn columntesisTuru;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSaglikTesisiListDataTable() {
                this.TableName = "tblSaglikTesisiList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblSaglikTesisiListDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblSaglikTesisiListDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn tesisIlColumn {
                get {
                    return this.columntesisIl;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn tesisAdiColumn {
                get {
                    return this.columntesisAdi;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn tesisKoduColumn {
                get {
                    return this.columntesisKodu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn tesisSinifKoduColumn {
                get {
                    return this.columntesisSinifKodu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn tesisTuruColumn {
                get {
                    return this.columntesisTuru;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSaglikTesisiListRow this[int index] {
                get {
                    return ((tblSaglikTesisiListRow)(this.Rows[index]));
                }
            }
            
            public event tblSaglikTesisiListRowChangeEventHandler tblSaglikTesisiListRowChanging;
            
            public event tblSaglikTesisiListRowChangeEventHandler tblSaglikTesisiListRowChanged;
            
            public event tblSaglikTesisiListRowChangeEventHandler tblSaglikTesisiListRowDeleting;
            
            public event tblSaglikTesisiListRowChangeEventHandler tblSaglikTesisiListRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblSaglikTesisiListRow(tblSaglikTesisiListRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSaglikTesisiListRow AddtblSaglikTesisiListRow(string tesisIl, string tesisAdi, string tesisKodu, string tesisSinifKodu, string tesisTuru) {
                tblSaglikTesisiListRow rowtblSaglikTesisiListRow = ((tblSaglikTesisiListRow)(this.NewRow()));
                rowtblSaglikTesisiListRow.ItemArray = new object[] {
                        tesisIl,
                        tesisAdi,
                        tesisKodu,
                        tesisSinifKodu,
                        tesisTuru};
                this.Rows.Add(rowtblSaglikTesisiListRow);
                return rowtblSaglikTesisiListRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tblSaglikTesisiListDataTable cln = ((tblSaglikTesisiListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tblSaglikTesisiListDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntesisIl = base.Columns["tesisIl"];
                this.columntesisAdi = base.Columns["tesisAdi"];
                this.columntesisKodu = base.Columns["tesisKodu"];
                this.columntesisSinifKodu = base.Columns["tesisSinifKodu"];
                this.columntesisTuru = base.Columns["tesisTuru"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntesisIl = new System.Data.DataColumn("tesisIl", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntesisIl);
                this.columntesisAdi = new System.Data.DataColumn("tesisAdi", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntesisAdi);
                this.columntesisKodu = new System.Data.DataColumn("tesisKodu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntesisKodu);
                this.columntesisSinifKodu = new System.Data.DataColumn("tesisSinifKodu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntesisSinifKodu);
                this.columntesisTuru = new System.Data.DataColumn("tesisTuru", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntesisTuru);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSaglikTesisiListRow NewtblSaglikTesisiListRow() {
                return ((tblSaglikTesisiListRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tblSaglikTesisiListRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tblSaglikTesisiListRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblSaglikTesisiListRowChanged != null)) {
                    this.tblSaglikTesisiListRowChanged(this, new tblSaglikTesisiListRowChangeEvent(((tblSaglikTesisiListRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblSaglikTesisiListRowChanging != null)) {
                    this.tblSaglikTesisiListRowChanging(this, new tblSaglikTesisiListRowChangeEvent(((tblSaglikTesisiListRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblSaglikTesisiListRowDeleted != null)) {
                    this.tblSaglikTesisiListRowDeleted(this, new tblSaglikTesisiListRowChangeEvent(((tblSaglikTesisiListRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblSaglikTesisiListRowDeleting != null)) {
                    this.tblSaglikTesisiListRowDeleting(this, new tblSaglikTesisiListRowChangeEvent(((tblSaglikTesisiListRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblSaglikTesisiListRow(tblSaglikTesisiListRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                other_ds ds = new other_ds();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblSaglikTesisiListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class st_illerDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnrid;
            
            private System.Data.DataColumn columnaciklama;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_illerDataTable() {
                this.TableName = "st_iller";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal st_illerDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected st_illerDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ridColumn {
                get {
                    return this.columnrid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn aciklamaColumn {
                get {
                    return this.columnaciklama;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_illerRow this[int index] {
                get {
                    return ((st_illerRow)(this.Rows[index]));
                }
            }
            
            public event st_illerRowChangeEventHandler st_illerRowChanging;
            
            public event st_illerRowChangeEventHandler st_illerRowChanged;
            
            public event st_illerRowChangeEventHandler st_illerRowDeleting;
            
            public event st_illerRowChangeEventHandler st_illerRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addst_illerRow(st_illerRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_illerRow Addst_illerRow(string rid, string aciklama) {
                st_illerRow rowst_illerRow = ((st_illerRow)(this.NewRow()));
                rowst_illerRow.ItemArray = new object[] {
                        rid,
                        aciklama};
                this.Rows.Add(rowst_illerRow);
                return rowst_illerRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                st_illerDataTable cln = ((st_illerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new st_illerDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrid = base.Columns["rid"];
                this.columnaciklama = base.Columns["aciklama"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrid = new System.Data.DataColumn("rid", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrid);
                this.columnaciklama = new System.Data.DataColumn("aciklama", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnaciklama);
                this.columnrid.MaxLength = 3;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_illerRow Newst_illerRow() {
                return ((st_illerRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new st_illerRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(st_illerRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.st_illerRowChanged != null)) {
                    this.st_illerRowChanged(this, new st_illerRowChangeEvent(((st_illerRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.st_illerRowChanging != null)) {
                    this.st_illerRowChanging(this, new st_illerRowChangeEvent(((st_illerRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.st_illerRowDeleted != null)) {
                    this.st_illerRowDeleted(this, new st_illerRowChangeEvent(((st_illerRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.st_illerRowDeleting != null)) {
                    this.st_illerRowDeleting(this, new st_illerRowChangeEvent(((st_illerRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removest_illerRow(st_illerRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                other_ds ds = new other_ds();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "st_illerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class st_kamu_ozelDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnrid;
            
            private System.Data.DataColumn columnaciklama;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_kamu_ozelDataTable() {
                this.TableName = "st_kamu_ozel";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal st_kamu_ozelDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected st_kamu_ozelDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ridColumn {
                get {
                    return this.columnrid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn aciklamaColumn {
                get {
                    return this.columnaciklama;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_kamu_ozelRow this[int index] {
                get {
                    return ((st_kamu_ozelRow)(this.Rows[index]));
                }
            }
            
            public event st_kamu_ozelRowChangeEventHandler st_kamu_ozelRowChanging;
            
            public event st_kamu_ozelRowChangeEventHandler st_kamu_ozelRowChanged;
            
            public event st_kamu_ozelRowChangeEventHandler st_kamu_ozelRowDeleting;
            
            public event st_kamu_ozelRowChangeEventHandler st_kamu_ozelRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addst_kamu_ozelRow(st_kamu_ozelRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_kamu_ozelRow Addst_kamu_ozelRow(string rid, string aciklama) {
                st_kamu_ozelRow rowst_kamu_ozelRow = ((st_kamu_ozelRow)(this.NewRow()));
                rowst_kamu_ozelRow.ItemArray = new object[] {
                        rid,
                        aciklama};
                this.Rows.Add(rowst_kamu_ozelRow);
                return rowst_kamu_ozelRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                st_kamu_ozelDataTable cln = ((st_kamu_ozelDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new st_kamu_ozelDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrid = base.Columns["rid"];
                this.columnaciklama = base.Columns["aciklama"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrid = new System.Data.DataColumn("rid", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrid);
                this.columnaciklama = new System.Data.DataColumn("aciklama", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnaciklama);
                this.columnrid.MaxLength = 3;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_kamu_ozelRow Newst_kamu_ozelRow() {
                return ((st_kamu_ozelRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new st_kamu_ozelRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(st_kamu_ozelRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.st_kamu_ozelRowChanged != null)) {
                    this.st_kamu_ozelRowChanged(this, new st_kamu_ozelRowChangeEvent(((st_kamu_ozelRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.st_kamu_ozelRowChanging != null)) {
                    this.st_kamu_ozelRowChanging(this, new st_kamu_ozelRowChangeEvent(((st_kamu_ozelRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.st_kamu_ozelRowDeleted != null)) {
                    this.st_kamu_ozelRowDeleted(this, new st_kamu_ozelRowChangeEvent(((st_kamu_ozelRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.st_kamu_ozelRowDeleting != null)) {
                    this.st_kamu_ozelRowDeleting(this, new st_kamu_ozelRowChangeEvent(((st_kamu_ozelRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removest_kamu_ozelRow(st_kamu_ozelRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                other_ds ds = new other_ds();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "st_kamu_ozelDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class st_tesis_turleriDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnrid;
            
            private System.Data.DataColumn columnaciklama;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_tesis_turleriDataTable() {
                this.TableName = "st_tesis_turleri";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal st_tesis_turleriDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected st_tesis_turleriDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ridColumn {
                get {
                    return this.columnrid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn aciklamaColumn {
                get {
                    return this.columnaciklama;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_tesis_turleriRow this[int index] {
                get {
                    return ((st_tesis_turleriRow)(this.Rows[index]));
                }
            }
            
            public event st_tesis_turleriRowChangeEventHandler st_tesis_turleriRowChanging;
            
            public event st_tesis_turleriRowChangeEventHandler st_tesis_turleriRowChanged;
            
            public event st_tesis_turleriRowChangeEventHandler st_tesis_turleriRowDeleting;
            
            public event st_tesis_turleriRowChangeEventHandler st_tesis_turleriRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addst_tesis_turleriRow(st_tesis_turleriRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_tesis_turleriRow Addst_tesis_turleriRow(string rid, string aciklama) {
                st_tesis_turleriRow rowst_tesis_turleriRow = ((st_tesis_turleriRow)(this.NewRow()));
                rowst_tesis_turleriRow.ItemArray = new object[] {
                        rid,
                        aciklama};
                this.Rows.Add(rowst_tesis_turleriRow);
                return rowst_tesis_turleriRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                st_tesis_turleriDataTable cln = ((st_tesis_turleriDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new st_tesis_turleriDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrid = base.Columns["rid"];
                this.columnaciklama = base.Columns["aciklama"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrid = new System.Data.DataColumn("rid", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrid);
                this.columnaciklama = new System.Data.DataColumn("aciklama", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnaciklama);
                this.columnrid.MaxLength = 3;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_tesis_turleriRow Newst_tesis_turleriRow() {
                return ((st_tesis_turleriRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new st_tesis_turleriRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(st_tesis_turleriRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.st_tesis_turleriRowChanged != null)) {
                    this.st_tesis_turleriRowChanged(this, new st_tesis_turleriRowChangeEvent(((st_tesis_turleriRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.st_tesis_turleriRowChanging != null)) {
                    this.st_tesis_turleriRowChanging(this, new st_tesis_turleriRowChangeEvent(((st_tesis_turleriRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.st_tesis_turleriRowDeleted != null)) {
                    this.st_tesis_turleriRowDeleted(this, new st_tesis_turleriRowChangeEvent(((st_tesis_turleriRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.st_tesis_turleriRowDeleting != null)) {
                    this.st_tesis_turleriRowDeleting(this, new st_tesis_turleriRowChangeEvent(((st_tesis_turleriRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removest_tesis_turleriRow(st_tesis_turleriRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                other_ds ds = new other_ds();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "st_tesis_turleriDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class st_tesislerDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnKODU;
            
            private System.Data.DataColumn columnADI;
            
            private System.Data.DataColumn columnUNVANI;
            
            private System.Data.DataColumn columnILI;
            
            private System.Data.DataColumn columnTESISTURU;
            
            private System.Data.DataColumn columnKAMOZ;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_tesislerDataTable() {
                this.TableName = "st_tesisler";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal st_tesislerDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected st_tesislerDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn KODUColumn {
                get {
                    return this.columnKODU;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ADIColumn {
                get {
                    return this.columnADI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UNVANIColumn {
                get {
                    return this.columnUNVANI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ILIColumn {
                get {
                    return this.columnILI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TESISTURUColumn {
                get {
                    return this.columnTESISTURU;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn KAMOZColumn {
                get {
                    return this.columnKAMOZ;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_tesislerRow this[int index] {
                get {
                    return ((st_tesislerRow)(this.Rows[index]));
                }
            }
            
            public event st_tesislerRowChangeEventHandler st_tesislerRowChanging;
            
            public event st_tesislerRowChangeEventHandler st_tesislerRowChanged;
            
            public event st_tesislerRowChangeEventHandler st_tesislerRowDeleting;
            
            public event st_tesislerRowChangeEventHandler st_tesislerRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addst_tesislerRow(st_tesislerRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_tesislerRow Addst_tesislerRow(string KODU, string ADI, string UNVANI, st_illerRow parentst_illerRowByst_iller_st_tesisler, st_tesis_turleriRow parentst_tesis_turleriRowByst_tesis_turleri_st_tesisler, st_kamu_ozelRow parentst_kamu_ozelRowByst_kamu_ozel_st_tesisler) {
                st_tesislerRow rowst_tesislerRow = ((st_tesislerRow)(this.NewRow()));
                rowst_tesislerRow.ItemArray = new object[] {
                        KODU,
                        ADI,
                        UNVANI,
                        parentst_illerRowByst_iller_st_tesisler[0],
                        parentst_tesis_turleriRowByst_tesis_turleri_st_tesisler[0],
                        parentst_kamu_ozelRowByst_kamu_ozel_st_tesisler[0]};
                this.Rows.Add(rowst_tesislerRow);
                return rowst_tesislerRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                st_tesislerDataTable cln = ((st_tesislerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new st_tesislerDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKODU = base.Columns["KODU"];
                this.columnADI = base.Columns["ADI"];
                this.columnUNVANI = base.Columns["UNVANI"];
                this.columnILI = base.Columns["ILI"];
                this.columnTESISTURU = base.Columns["TESISTURU"];
                this.columnKAMOZ = base.Columns["KAMOZ"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKODU = new System.Data.DataColumn("KODU", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnKODU);
                this.columnADI = new System.Data.DataColumn("ADI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnADI);
                this.columnUNVANI = new System.Data.DataColumn("UNVANI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNVANI);
                this.columnILI = new System.Data.DataColumn("ILI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnILI);
                this.columnTESISTURU = new System.Data.DataColumn("TESISTURU", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTESISTURU);
                this.columnKAMOZ = new System.Data.DataColumn("KAMOZ", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnKAMOZ);
                this.columnKODU.MaxLength = 10;
                this.columnILI.MaxLength = 3;
                this.columnTESISTURU.MaxLength = 3;
                this.columnKAMOZ.MaxLength = 3;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_tesislerRow Newst_tesislerRow() {
                return ((st_tesislerRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new st_tesislerRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(st_tesislerRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.st_tesislerRowChanged != null)) {
                    this.st_tesislerRowChanged(this, new st_tesislerRowChangeEvent(((st_tesislerRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.st_tesislerRowChanging != null)) {
                    this.st_tesislerRowChanging(this, new st_tesislerRowChangeEvent(((st_tesislerRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.st_tesislerRowDeleted != null)) {
                    this.st_tesislerRowDeleted(this, new st_tesislerRowChangeEvent(((st_tesislerRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.st_tesislerRowDeleting != null)) {
                    this.st_tesislerRowDeleting(this, new st_tesislerRowChangeEvent(((st_tesislerRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removest_tesislerRow(st_tesislerRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                other_ds ds = new other_ds();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "st_tesislerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblDoktorListDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columndrAdi;
            
            private System.Data.DataColumn columndrSoyadi;
            
            private System.Data.DataColumn columndrDiplomaNo;
            
            private System.Data.DataColumn columndrTescilNo;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblDoktorListDataTable() {
                this.TableName = "tblDoktorList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblDoktorListDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblDoktorListDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn drAdiColumn {
                get {
                    return this.columndrAdi;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn drSoyadiColumn {
                get {
                    return this.columndrSoyadi;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn drDiplomaNoColumn {
                get {
                    return this.columndrDiplomaNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn drTescilNoColumn {
                get {
                    return this.columndrTescilNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblDoktorListRow this[int index] {
                get {
                    return ((tblDoktorListRow)(this.Rows[index]));
                }
            }
            
            public event tblDoktorListRowChangeEventHandler tblDoktorListRowChanging;
            
            public event tblDoktorListRowChangeEventHandler tblDoktorListRowChanged;
            
            public event tblDoktorListRowChangeEventHandler tblDoktorListRowDeleting;
            
            public event tblDoktorListRowChangeEventHandler tblDoktorListRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblDoktorListRow(tblDoktorListRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblDoktorListRow AddtblDoktorListRow(string drAdi, string drSoyadi, string drDiplomaNo, string drTescilNo) {
                tblDoktorListRow rowtblDoktorListRow = ((tblDoktorListRow)(this.NewRow()));
                rowtblDoktorListRow.ItemArray = new object[] {
                        drAdi,
                        drSoyadi,
                        drDiplomaNo,
                        drTescilNo};
                this.Rows.Add(rowtblDoktorListRow);
                return rowtblDoktorListRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tblDoktorListDataTable cln = ((tblDoktorListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tblDoktorListDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columndrAdi = base.Columns["drAdi"];
                this.columndrSoyadi = base.Columns["drSoyadi"];
                this.columndrDiplomaNo = base.Columns["drDiplomaNo"];
                this.columndrTescilNo = base.Columns["drTescilNo"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columndrAdi = new System.Data.DataColumn("drAdi", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndrAdi);
                this.columndrSoyadi = new System.Data.DataColumn("drSoyadi", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndrSoyadi);
                this.columndrDiplomaNo = new System.Data.DataColumn("drDiplomaNo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndrDiplomaNo);
                this.columndrTescilNo = new System.Data.DataColumn("drTescilNo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndrTescilNo);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblDoktorListRow NewtblDoktorListRow() {
                return ((tblDoktorListRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tblDoktorListRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tblDoktorListRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblDoktorListRowChanged != null)) {
                    this.tblDoktorListRowChanged(this, new tblDoktorListRowChangeEvent(((tblDoktorListRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblDoktorListRowChanging != null)) {
                    this.tblDoktorListRowChanging(this, new tblDoktorListRowChangeEvent(((tblDoktorListRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblDoktorListRowDeleted != null)) {
                    this.tblDoktorListRowDeleted(this, new tblDoktorListRowChangeEvent(((tblDoktorListRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblDoktorListRowDeleting != null)) {
                    this.tblDoktorListRowDeleting(this, new tblDoktorListRowChangeEvent(((tblDoktorListRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblDoktorListRow(tblDoktorListRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                other_ds ds = new other_ds();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblDoktorListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblIllerRow : System.Data.DataRow {
            
            private tblIllerDataTable tabletblIller;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblIllerRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblIller = ((tblIllerDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kod {
                get {
                    try {
                        return ((string)(this[this.tabletblIller.kodColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'kod\' in table \'tblIller\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblIller.kodColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string aciklama {
                get {
                    try {
                        return ((string)(this[this.tabletblIller.aciklamaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'aciklama\' in table \'tblIller\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblIller.aciklamaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskodNull() {
                return this.IsNull(this.tabletblIller.kodColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkodNull() {
                this[this.tabletblIller.kodColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaciklamaNull() {
                return this.IsNull(this.tabletblIller.aciklamaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaciklamaNull() {
                this[this.tabletblIller.aciklamaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblSaglikTesisiListRow : System.Data.DataRow {
            
            private tblSaglikTesisiListDataTable tabletblSaglikTesisiList;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblSaglikTesisiListRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblSaglikTesisiList = ((tblSaglikTesisiListDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tesisIl {
                get {
                    try {
                        return ((string)(this[this.tabletblSaglikTesisiList.tesisIlColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'tesisIl\' in table \'tblSaglikTesisiList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSaglikTesisiList.tesisIlColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tesisAdi {
                get {
                    try {
                        return ((string)(this[this.tabletblSaglikTesisiList.tesisAdiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'tesisAdi\' in table \'tblSaglikTesisiList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSaglikTesisiList.tesisAdiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tesisKodu {
                get {
                    try {
                        return ((string)(this[this.tabletblSaglikTesisiList.tesisKoduColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'tesisKodu\' in table \'tblSaglikTesisiList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSaglikTesisiList.tesisKoduColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tesisSinifKodu {
                get {
                    try {
                        return ((string)(this[this.tabletblSaglikTesisiList.tesisSinifKoduColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'tesisSinifKodu\' in table \'tblSaglikTesisiList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSaglikTesisiList.tesisSinifKoduColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tesisTuru {
                get {
                    try {
                        return ((string)(this[this.tabletblSaglikTesisiList.tesisTuruColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'tesisTuru\' in table \'tblSaglikTesisiList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSaglikTesisiList.tesisTuruColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstesisIlNull() {
                return this.IsNull(this.tabletblSaglikTesisiList.tesisIlColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettesisIlNull() {
                this[this.tabletblSaglikTesisiList.tesisIlColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstesisAdiNull() {
                return this.IsNull(this.tabletblSaglikTesisiList.tesisAdiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettesisAdiNull() {
                this[this.tabletblSaglikTesisiList.tesisAdiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstesisKoduNull() {
                return this.IsNull(this.tabletblSaglikTesisiList.tesisKoduColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettesisKoduNull() {
                this[this.tabletblSaglikTesisiList.tesisKoduColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstesisSinifKoduNull() {
                return this.IsNull(this.tabletblSaglikTesisiList.tesisSinifKoduColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettesisSinifKoduNull() {
                this[this.tabletblSaglikTesisiList.tesisSinifKoduColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstesisTuruNull() {
                return this.IsNull(this.tabletblSaglikTesisiList.tesisTuruColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettesisTuruNull() {
                this[this.tabletblSaglikTesisiList.tesisTuruColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class st_illerRow : System.Data.DataRow {
            
            private st_illerDataTable tablest_iller;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal st_illerRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablest_iller = ((st_illerDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rid {
                get {
                    try {
                        return ((string)(this[this.tablest_iller.ridColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'rid\' in table \'st_iller\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_iller.ridColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string aciklama {
                get {
                    try {
                        return ((string)(this[this.tablest_iller.aciklamaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'aciklama\' in table \'st_iller\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_iller.aciklamaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsridNull() {
                return this.IsNull(this.tablest_iller.ridColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetridNull() {
                this[this.tablest_iller.ridColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaciklamaNull() {
                return this.IsNull(this.tablest_iller.aciklamaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaciklamaNull() {
                this[this.tablest_iller.aciklamaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_tesislerRow[] Getst_tesislerRows() {
                return ((st_tesislerRow[])(base.GetChildRows(this.Table.ChildRelations["st_iller_st_tesisler"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class st_kamu_ozelRow : System.Data.DataRow {
            
            private st_kamu_ozelDataTable tablest_kamu_ozel;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal st_kamu_ozelRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablest_kamu_ozel = ((st_kamu_ozelDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rid {
                get {
                    try {
                        return ((string)(this[this.tablest_kamu_ozel.ridColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'rid\' in table \'st_kamu_ozel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_kamu_ozel.ridColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string aciklama {
                get {
                    try {
                        return ((string)(this[this.tablest_kamu_ozel.aciklamaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'aciklama\' in table \'st_kamu_ozel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_kamu_ozel.aciklamaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsridNull() {
                return this.IsNull(this.tablest_kamu_ozel.ridColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetridNull() {
                this[this.tablest_kamu_ozel.ridColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaciklamaNull() {
                return this.IsNull(this.tablest_kamu_ozel.aciklamaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaciklamaNull() {
                this[this.tablest_kamu_ozel.aciklamaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_tesislerRow[] Getst_tesislerRows() {
                return ((st_tesislerRow[])(base.GetChildRows(this.Table.ChildRelations["st_kamu_ozel_st_tesisler"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class st_tesis_turleriRow : System.Data.DataRow {
            
            private st_tesis_turleriDataTable tablest_tesis_turleri;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal st_tesis_turleriRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablest_tesis_turleri = ((st_tesis_turleriDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rid {
                get {
                    try {
                        return ((string)(this[this.tablest_tesis_turleri.ridColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'rid\' in table \'st_tesis_turleri\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_tesis_turleri.ridColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string aciklama {
                get {
                    try {
                        return ((string)(this[this.tablest_tesis_turleri.aciklamaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'aciklama\' in table \'st_tesis_turleri\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_tesis_turleri.aciklamaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsridNull() {
                return this.IsNull(this.tablest_tesis_turleri.ridColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetridNull() {
                this[this.tablest_tesis_turleri.ridColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaciklamaNull() {
                return this.IsNull(this.tablest_tesis_turleri.aciklamaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaciklamaNull() {
                this[this.tablest_tesis_turleri.aciklamaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_tesislerRow[] Getst_tesislerRows() {
                return ((st_tesislerRow[])(base.GetChildRows(this.Table.ChildRelations["st_tesis_turleri_st_tesisler"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class st_tesislerRow : System.Data.DataRow {
            
            private st_tesislerDataTable tablest_tesisler;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal st_tesislerRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablest_tesisler = ((st_tesislerDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KODU {
                get {
                    try {
                        return ((string)(this[this.tablest_tesisler.KODUColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'KODU\' in table \'st_tesisler\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_tesisler.KODUColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADI {
                get {
                    try {
                        return ((string)(this[this.tablest_tesisler.ADIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ADI\' in table \'st_tesisler\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_tesisler.ADIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UNVANI {
                get {
                    try {
                        return ((string)(this[this.tablest_tesisler.UNVANIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'UNVANI\' in table \'st_tesisler\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_tesisler.UNVANIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ILI {
                get {
                    try {
                        return ((string)(this[this.tablest_tesisler.ILIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ILI\' in table \'st_tesisler\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_tesisler.ILIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TESISTURU {
                get {
                    try {
                        return ((string)(this[this.tablest_tesisler.TESISTURUColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TESISTURU\' in table \'st_tesisler\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_tesisler.TESISTURUColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KAMOZ {
                get {
                    try {
                        return ((string)(this[this.tablest_tesisler.KAMOZColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'KAMOZ\' in table \'st_tesisler\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_tesisler.KAMOZColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_illerRow st_illerRow {
                get {
                    return ((st_illerRow)(this.GetParentRow(this.Table.ParentRelations["st_iller_st_tesisler"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["st_iller_st_tesisler"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_tesis_turleriRow st_tesis_turleriRow {
                get {
                    return ((st_tesis_turleriRow)(this.GetParentRow(this.Table.ParentRelations["st_tesis_turleri_st_tesisler"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["st_tesis_turleri_st_tesisler"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_kamu_ozelRow st_kamu_ozelRow {
                get {
                    return ((st_kamu_ozelRow)(this.GetParentRow(this.Table.ParentRelations["st_kamu_ozel_st_tesisler"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["st_kamu_ozel_st_tesisler"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKODUNull() {
                return this.IsNull(this.tablest_tesisler.KODUColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKODUNull() {
                this[this.tablest_tesisler.KODUColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADINull() {
                return this.IsNull(this.tablest_tesisler.ADIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADINull() {
                this[this.tablest_tesisler.ADIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNVANINull() {
                return this.IsNull(this.tablest_tesisler.UNVANIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNVANINull() {
                this[this.tablest_tesisler.UNVANIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsILINull() {
                return this.IsNull(this.tablest_tesisler.ILIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetILINull() {
                this[this.tablest_tesisler.ILIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTESISTURUNull() {
                return this.IsNull(this.tablest_tesisler.TESISTURUColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTESISTURUNull() {
                this[this.tablest_tesisler.TESISTURUColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKAMOZNull() {
                return this.IsNull(this.tablest_tesisler.KAMOZColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKAMOZNull() {
                this[this.tablest_tesisler.KAMOZColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblDoktorListRow : System.Data.DataRow {
            
            private tblDoktorListDataTable tabletblDoktorList;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblDoktorListRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblDoktorList = ((tblDoktorListDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string drAdi {
                get {
                    try {
                        return ((string)(this[this.tabletblDoktorList.drAdiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'drAdi\' in table \'tblDoktorList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblDoktorList.drAdiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string drSoyadi {
                get {
                    try {
                        return ((string)(this[this.tabletblDoktorList.drSoyadiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'drSoyadi\' in table \'tblDoktorList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblDoktorList.drSoyadiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string drDiplomaNo {
                get {
                    try {
                        return ((string)(this[this.tabletblDoktorList.drDiplomaNoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'drDiplomaNo\' in table \'tblDoktorList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblDoktorList.drDiplomaNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string drTescilNo {
                get {
                    try {
                        return ((string)(this[this.tabletblDoktorList.drTescilNoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'drTescilNo\' in table \'tblDoktorList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblDoktorList.drTescilNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdrAdiNull() {
                return this.IsNull(this.tabletblDoktorList.drAdiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdrAdiNull() {
                this[this.tabletblDoktorList.drAdiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdrSoyadiNull() {
                return this.IsNull(this.tabletblDoktorList.drSoyadiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdrSoyadiNull() {
                this[this.tabletblDoktorList.drSoyadiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdrDiplomaNoNull() {
                return this.IsNull(this.tabletblDoktorList.drDiplomaNoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdrDiplomaNoNull() {
                this[this.tabletblDoktorList.drDiplomaNoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdrTescilNoNull() {
                return this.IsNull(this.tabletblDoktorList.drTescilNoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdrTescilNoNull() {
                this[this.tabletblDoktorList.drTescilNoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblIllerRowChangeEvent : System.EventArgs {
            
            private tblIllerRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblIllerRowChangeEvent(tblIllerRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblIllerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblSaglikTesisiListRowChangeEvent : System.EventArgs {
            
            private tblSaglikTesisiListRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSaglikTesisiListRowChangeEvent(tblSaglikTesisiListRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSaglikTesisiListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class st_illerRowChangeEvent : System.EventArgs {
            
            private st_illerRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_illerRowChangeEvent(st_illerRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_illerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class st_kamu_ozelRowChangeEvent : System.EventArgs {
            
            private st_kamu_ozelRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_kamu_ozelRowChangeEvent(st_kamu_ozelRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_kamu_ozelRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class st_tesis_turleriRowChangeEvent : System.EventArgs {
            
            private st_tesis_turleriRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_tesis_turleriRowChangeEvent(st_tesis_turleriRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_tesis_turleriRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class st_tesislerRowChangeEvent : System.EventArgs {
            
            private st_tesislerRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_tesislerRowChangeEvent(st_tesislerRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public st_tesislerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblDoktorListRowChangeEvent : System.EventArgs {
            
            private tblDoktorListRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblDoktorListRowChangeEvent(tblDoktorListRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblDoktorListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591